{"version":3,"sources":["components/Card/Card.js","components/CardList/CardList.js","components/SearchBox/SearchBox.js","components/Scroll/Scroll.js","components/ErrorBoundry/ErrorBoundry.js","containers/App/App.js","reportWebVitals.js","index.js"],"names":["Card","email","name","id","className","src","alt","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","children","ErrorBoundry","state","hasError","errorInfo","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAmBeA,MAjBf,YAAgC,IAAjBC,EAAgB,EAAhBA,MAAMC,EAAU,EAAVA,KAAKC,EAAK,EAALA,GAEtB,OACI,sBAAKC,UAAU,sDAAf,UACI,8BACA,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,aAGpD,gCACI,6BAAKJ,IACL,4BAAID,WCiBLM,MArBf,YAA+B,IAAXC,EAAU,EAAVA,OAEhB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACA,cAAC,EAAD,CAECR,GAAKK,EAAQG,GAAIR,GACjBD,KAAOM,EAAQG,GAAIT,KACnBD,MAAQO,EAAQG,GAAIV,OAHfU,SCCXC,MAff,YAA4D,EAAxCC,YAAyC,IAA7BC,EAA4B,EAA5BA,aAC9B,OACE,mCACE,uBACEV,UAAU,mCACVW,KAAK,SACLb,KAAK,GACLC,GAAG,GACHa,YAAY,gBACZC,SAAUH,O,MCCHI,MARd,SAAgBC,GACb,OACI,qBAAKf,UAAU,SAAf,SACKe,EAAMC,YCeJC,E,kDAnBb,WAAYF,GAAQ,IAAD,8BACjB,cAAMA,IACDG,MAAQ,CACXC,UAAU,GAHK,E,8DAODC,GAChBC,KAAKC,SAAS,CAAEH,UAAU,M,+BAI1B,OAAIE,KAAKH,MAAMC,SACN,0DAEFE,KAAKN,MAAMC,a,GAhBKO,aCkDZC,G,wDA3Cb,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IAgBRU,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEb,YAAaiB,EAAMC,OAAOC,SAhB1C,EAAKV,MAAQ,CACXd,OAAQ,GACRK,YAAa,IAJE,E,gEASE,IAAD,OAClBoB,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKX,SAAS,CAAElB,OAAQ6B,S,+BAQhB,MAEoBZ,KAAKH,MAA7Bd,EAFI,EAEJA,OAAQK,EAFJ,EAEIA,YACVyB,EAAiB9B,EAAO+B,QAAO,SAACC,GACpC,OAAOA,EAAMtC,KAAKuC,cAAcC,SAAS7B,EAAY4B,kBAEvD,OAAQjC,EAAOmC,OAGb,sBAAKvC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcW,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAASrB,OAAQ8B,WAPvB,6C,GA7BYX,cCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.88d96d75.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Card({email,name,id}) {\r\n\r\n    return (\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <div >\r\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"robots\" />\r\n\r\n            </div>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react';\r\nimport Card from '../Card/Card'\r\n\r\n\r\n\r\n//using state\r\n\r\n\r\nfunction CardList({ robots }) {\r\n    //the return component\r\n    return (\r\n        <div >\r\n            {//the loop\r\n                robots.map((user, i) => {\r\n                    return (\r\n                    <Card \r\n                    key={ i }\r\n                     id={ robots[ i ].id } \r\n                     name={ robots[ i ].name } \r\n                     email={ robots[ i ].email } \r\n                     />\r\n                     );\r\n\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList\r\n","import React from \"react\";\r\n\r\nfunction SearchBox({searchfield,searchChange}): JSX.Element {\r\n  return (\r\n    <>\r\n      <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type=\"search\"\r\n        name=\"\"\r\n        id=\"\"\r\n        placeholder=\"search robots\"\r\n        onChange={searchChange}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react'\r\nimport './Scroll.css'\r\n\r\n//Scroll component\r\n function Scroll(props) {\r\n    return (\r\n        <div className=\"scroll\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll\r\n","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n\r\n  componentDidCatch(errorInfo) {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Oooops. That is not good</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React, { Component } from \"react\";\r\nimport CarList from \"../../components/CardList/CardList\";\r\nimport SearchBox from \"../../components/SearchBox/SearchBox\";\r\nimport Scroll from \"../../components/Scroll/Scroll\";\r\n//import { robots } from \"../../data/robots\";\r\nimport ErrorBoundry from \"../../components/ErrorBoundry/ErrorBoundry\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: \"\",\r\n    }; //here the searchfield e is empty\r\n    //this.onSearchChange(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((users) => {\r\n        this.setState({ robots: users });\r\n      });\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value });\r\n  }; //the method to change state\r\n\r\n  render(): any {\r\n    //filter\r\n    const { robots, searchfield } = this.state;\r\n    const filteredRobots = robots.filter((robot) => {\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    });\r\n    return !robots.length ? (\r\n      <h1>Loading</h1>\r\n    ) : (\r\n      <div className=\"tc\">\r\n        <h1 className=\"f1\">Robofriends</h1>\r\n        <SearchBox searchChange={this.onSearchChange} />\r\n        <Scroll>\r\n          <ErrorBoundry>\r\n            <CarList robots={filteredRobots} />\r\n          </ErrorBoundry>\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}